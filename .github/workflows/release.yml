name: Build release

on:
  push:
    branches:
    - master
    tags:
    - 'v*'
  pull_request:

jobs:
  cibuildwheel:
    name: Build ${{ matrix.cibw_build }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python: [3.9]
        cibuildwheel_version: ["cibuildwheel"]
        cibw_build: [""]
        cibw_skip: ["pp37-*"]
        include:
          - os: ubuntu-18.04
            python: 3.9
            cibuildwheel_version: "cibuildwheel==1.12.0"
            cibw_build: "cp35-* cp36-*"
            cibw_skip: ""

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade "${{matrix.cibuildwheel_version}}"

      - name: Set up QEMU
        # For cross-architecture builds
        # https://cibuildwheel.readthedocs.io/en/stable/faq/#emulation
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build binary wheels
        env:
          # Disable for platforms where pure Python wheels would be generated
          CIBW_ARCHS_LINUX: "auto aarch64"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: ${{ matrix.cibw_skip }}
        run: cibuildwheel

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_pure_wheels:
    name: Build wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.9, 2.7]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packaging tools
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Build Python pure Python wheel
        env:
          BUILD_DISABLE_EXTENSIONS: "1"
        run: python setup.py bdist_wheel

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.9

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [cibuildwheel, build_pure_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TWINE_PASSWORD }}
